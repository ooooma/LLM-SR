{"sample_order": 8, "function": "def equation(b: np.ndarray, s: np.ndarray, temp: np.ndarray, pH: np.ndarray, params: np.ndarray) -> np.ndarray:\n    \"\"\" Mathematical function for bacterial growth rate\n\n    Args:\n        b: A numpy array representing observations of population density of the bacterial species.\n        s: A numpy array representing observations of substrate concentration.\n        temp: A numpy array representing observations of temperature.\n        pH: A numpy array representing observations of pH level.\n        params: Array of numeric constants or parameters to be optimized\n\n    Return:\n        A numpy array representing bacterial growth rate as the result of applying the mathematical function to the inputs.\n    \"\"\"\n    \"\"\" Improved mathematical function for bacterial growth rate\n    \n    Args:\n        b: A numpy array representing observations of population density of the bacterial species.\n        s: A numpy array representing observations of substrate concentration.\n        temp: A numpy array representing observations of temperature.\n        pH: A numpy array representing observations of pH level.\n        params: Array of numeric constants or parameters to be optimized\n    \n    Return:\n        A numpy array representing bacterial growth rate as the result of applying the mathematical function to the inputs.\n    \"\"\"\n    \n    # logistic growth equation with additional modifiers for substrate, temp, and pH\n    # b_max is maximum growth, K is carrying capacity, s_opt is optimal substrate concentration,\n    # temp_opt is optimal temperature, pH_opt is optimal pH level\n    b_max = params[0]\n    K = params[1]\n    s_opt = params[2]\n    temp_opt = params[3]\n    pH_opt = params[4]\n    \n    # Adjustment for substrate limitation\n    growth_substrate = 1 - np.exp(-s / s_opt)\n    \n    # Adjustment for temperature deviation from optimal (Gaussian-like effect)\n    growth_temp = np.exp(-(temp - temp_opt)**2 / (2 * params[5]**2))\n    \n    # Adjustment for pH deviation from optimal (similar to temperature adjustment)\n    growth_pH = np.exp(-(pH - pH_opt)**2 / (2 * params[6]**2))\n    \n    # logistic growth rate equation\n    growth_rate = b_max * b * (1 - b/K) * growth_substrate * growth_temp * growth_pH\n    \n    return growth_rate\n\n", "score": -0.02090767699932208}