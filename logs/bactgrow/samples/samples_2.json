{"sample_order": 2, "function": "def equation(b: np.ndarray, s: np.ndarray, temp: np.ndarray, pH: np.ndarray, params: np.ndarray) -> np.ndarray:\n    \"\"\" Mathematical function for bacterial growth rate\n\n    Args:\n        b: A numpy array representing observations of population density of the bacterial species.\n        s: A numpy array representing observations of substrate concentration.\n        temp: A numpy array representing observations of temperature.\n        pH: A numpy array representing observations of pH level.\n        params: Array of numeric constants or parameters to be optimized\n\n    Return:\n        A numpy array representing bacterial growth rate as the result of applying the mathematical function to the inputs.\n    \"\"\"\n    \"\"\" Improved mathematical function for bacterial growth rate\n    \n    Args:\n        b: A numpy array representing observations of population density of the bacterial species.\n        s: A numpy array representing observations of substrate concentration.\n        temp: A numpy array representing observations of temperature.\n        pH: A numpy array representing observations of pH level.\n        params: Array of numeric constants or parameters to be optimized\n    \n    Return:\n        A numpy array representing bacterial growth rate as the result of applying the mathematical function to the inputs.\n    \"\"\"\n    \n    # Parameters for saturation effects and optimal conditions\n    Ks = params[5]  # Saturation constant for substrate concentration\n    Topt = params[6]  # Optimal temperature\n    pHopt = params[7]  # Optimal pH\n    \n    growth_rate = (\n        params[0] * b +\n        (params[1] * s) / (s + Ks) +   # Michaelis-Menten saturation effect for substrate concentration\n        params[2] * np.exp(-((temp - Topt)**2)/params[8]) +  # Gaussian peak at optimal temperature\n        params[3] * np.exp(-((pH - pHopt)**2)/params[9]) +   # Gaussian peak at optimal pH level\n        params[4]\n    )\n    \n    return growth_rate\n\n", "score": -0.01915794365792763}