{"sample_order": 4, "function": "def equation(b: np.ndarray, s: np.ndarray, temp: np.ndarray, pH: np.ndarray, params: np.ndarray) -> np.ndarray:\n    \"\"\" Mathematical function for bacterial growth rate\n\n    Args:\n        b: A numpy array representing observations of population density of the bacterial species.\n        s: A numpy array representing observations of substrate concentration.\n        temp: A numpy array representing observations of temperature.\n        pH: A numpy array representing observations of pH level.\n        params: Array of numeric constants or parameters to be optimized\n\n    Return:\n        A numpy array representing bacterial growth rate as the result of applying the mathematical function to the inputs.\n    \"\"\"\n    \"\"\"Improved version of `equation_v0` representing bacterial growth rate.\"\"\"\n    \n    # Growth rate is limited by population density through logistic growth.\n    growth_rate_density = params[0] * b * (1 - b/params[1])\n    \n    # Substrate concentration can increase the growth rate up to a point.\n    substrate_effect = s / (s + params[2])  # Michaelis-Menten type equation\n    \n    # Temperature effect modeled with Gaussian function around optimal temperature (params[3]).\n    temp_effect = np.exp(-((temp - params[3])**2) / (2 * params[4]**2))\n    \n    # pH effect, also using a Gaussian function for an optimal range.\n    pH_effect = np.exp(-((pH - params[5])**2) / (2 * params[6]**2))\n    \n    return growth_rate_density * substrate_effect * temp_effect * pH_effect\n\n", "score": -0.02090777757863995}