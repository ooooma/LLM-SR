{"sample_order": 79, "function": "def equation(t: np.ndarray, x: np.ndarray, v: np.ndarray, params: np.ndarray) -> np.ndarray:\n    \"\"\" Mathematical function for acceleration in a damped nonlinear oscillator\n\n    Args:\n        t: A numpy array representing time.\n        x: A numpy array representing observations of current position.\n        v: A numpy array representing observations of velocity.\n        params: Array of numeric constants or parameters to be optimized\n\n    Return:\n        A numpy array representing acceleration as the result of applying the mathematical function to the inputs.\n    \"\"\"\n    \"\"\"\n    The equation that best describes the change in velocity due to a damped nonlinear oscillator with driving force.\n    \n    Parameters:\n    -----------\n    t : np.ndarray\n        An array of time values.\n    x : np.ndarray\n        An array of current position values.\n    v : np.ndarray\n        An array of velocity values.\n    params : np.ndarray\n        An array of parameters for the equation.\n    \n    Returns:\n    --------\n    np.ndarray\n        An array of acceleration values for each time point in the input array `t`.\n    \"\"\"\n    dv = params[0] * t + params[1] * x + params[2] * v + params[3]\n\n", "score": null}