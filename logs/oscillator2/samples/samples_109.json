{"sample_order": 109, "function": "def equation(t: np.ndarray, x: np.ndarray, v: np.ndarray, params: np.ndarray) -> np.ndarray:\n    \"\"\" Mathematical function for acceleration in a damped nonlinear oscillator\n\n    Args:\n        t: A numpy array representing time.\n        x: A numpy array representing observations of current position.\n        v: A numpy array representing observations of velocity.\n        params: Array of numeric constants or parameters to be optimized\n\n    Return:\n        A numpy array representing acceleration as the result of applying the mathematical function to the inputs.\n    \"\"\"\n    \"\"\"\n    Selects an appropriate mathematical function skeleton for a given set of parameters.\n    \n    Args:\n        t: time array.\n        x: position array.\n        v: velocity array.\n        params: an array of parameters.\n        \n    Returns:\n        the equation function skeleton.\n    \"\"\"\n\n", "score": null}