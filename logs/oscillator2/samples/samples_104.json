{"sample_order": 104, "function": "def equation(t: np.ndarray, x: np.ndarray, v: np.ndarray, params: np.ndarray) -> np.ndarray:\n    \"\"\" Mathematical function for acceleration in a damped nonlinear oscillator\n\n    Args:\n        t: A numpy array representing time.\n        x: A numpy array representing observations of current position.\n        v: A numpy array representing observations of velocity.\n        params: Array of numeric constants or parameters to be optimized\n\n    Return:\n        A numpy array representing acceleration as the result of applying the mathematical function to the inputs.\n    \"\"\"\n    \"\"\"Mathematical function that represents acceleration in a damped nonlinear oscillator.\n    \n    Args:\n    t: A numpy array representing time.\n    x: A numpy array representing observations of current position.\n    v: A numpy array representing observations of velocity.\n    params: Array of numeric constants or parameters to be optimized.\n    \n    Return:\n    A numpy array representing acceleration as the result of applying the mathematical function to the inputs.\n    \"\"\"\n    dy = -params.omega * v - np.sin(params.R * t) + params.F / params.M\n    return dy\n\n", "score": null}