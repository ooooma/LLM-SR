{"sample_order": 0, "function": "def equation(t: torch.Tensor, x: torch.Tensor, v: torch.Tensor, params: torch.nn.ParameterList) -> torch.Tensor:\n    \"\"\" Mathematical function for acceleration in a damped nonlinear oscillator\n\n    Args:\n        t (torch.Tensor): time.\n        x (torch.Tensor): observations of current position.\n        v (torch.Tensor): observations of velocity.\n        params (torch.nn.ParameterList): List of numeric constants or parameters to be optimized\n\n    Return:\n        torch.Tensor: acceleration as the result of applying the mathematical function to the inputs.\n    \"\"\"\n    dv = params[0] * t  +  params[1] * x +  params[2] * v + params[3]\n    return dv\n\n", "score": -39.64851760864258}